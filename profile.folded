<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Memory.load (2 samples, 0.20%)</title><rect x="1051.9" y="101" width="2.4" height="15.0" fill="rgb(235,168,46)" rx="2" ry="2" />
<text text-anchor="" x="1054.94" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.draw (4 samples, 0.40%)</title><rect x="1010.6" y="101" width="4.8" height="15.0" fill="rgb(207,83,16)" rx="2" ry="2" />
<text text-anchor="" x="1013.64" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Primitive.primitive (2 samples, 0.20%)</title><rect x="1082.6" y="101" width="2.4" height="15.0" fill="rgb(247,153,21)" rx="2" ry="2" />
<text text-anchor="" x="1085.62" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.render.renderCell.rect (15 samples, 1.50%)</title><rect x="609.4" y="165" width="17.7" height="15.0" fill="rgb(240,186,29)" rx="2" ry="2" />
<text text-anchor="" x="612.44" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Extra.execParserPure.p (2 samples, 0.20%)</title><rect x="1179.4" y="165" width="2.3" height="15.0" fill="rgb(248,85,21)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.step (77 samples, 7.70%)</title><rect x="996.5" y="181" width="90.8" height="15.0" fill="rgb(243,28,37)" rx="2" ry="2" />
<text text-anchor="" x="999.48" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.readTimer (2 samples, 0.20%)</title><rect x="1177.0" y="165" width="2.4" height="15.0" fill="rgb(219,158,20)" rx="2" ry="2" />
<text text-anchor="" x="1180.02" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints (313 samples, 31.30%)</title><rect x="627.1" y="181" width="369.4" height="15.0" fill="rgb(249,90,2)" rx="2" ry="2" />
<text text-anchor="" x="630.14" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.Video.activePoints</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.readPC (12 samples, 1.20%)</title><rect x="1054.3" y="149" width="14.2" height="15.0" fill="rgb(213,196,43)" rx="2" ry="2" />
<text text-anchor="" x="1057.30" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.render.renderCell.(...) (6 samples, 0.60%)</title><rect x="602.4" y="165" width="7.0" height="15.0" fill="rgb(224,143,36)" rx="2" ry="2" />
<text text-anchor="" x="605.36" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.writePC (10 samples, 1.00%)</title><rect x="1075.5" y="117" width="11.8" height="15.0" fill="rgb(254,147,38)" rx="2" ry="2" />
<text text-anchor="" x="1078.54" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Vector.Primitive.Mutable.basicUnsafeRead (22 samples, 2.20%)</title><rect x="732.2" y="133" width="25.9" height="15.0" fill="rgb(243,48,40)" rx="2" ry="2" />
<text text-anchor="" x="735.16" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.writePC (16 samples, 1.60%)</title><rect x="1068.5" y="149" width="18.8" height="15.0" fill="rgb(211,34,25)" rx="2" ry="2" />
<text text-anchor="" x="1071.46" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.throttle (76 samples, 7.60%)</title><rect x="1087.3" y="197" width="89.7" height="15.0" fill="rgb(243,3,17)" rx="2" ry="2" />
<text text-anchor="" x="1090.34" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Primitive.primitive (2 samples, 0.20%)</title><rect x="1082.6" y="85" width="2.4" height="15.0" fill="rgb(239,16,51)" rx="2" ry="2" />
<text text-anchor="" x="1085.62" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Mutable.URef.readRef (2 samples, 0.20%)</title><rect x="1066.1" y="101" width="2.4" height="15.0" fill="rgb(241,153,8)" rx="2" ry="2" />
<text text-anchor="" x="1069.10" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (850 samples, 85.00%)</title><rect x="178.7" y="245" width="1003.0" height="15.0" fill="rgb(253,71,40)" rx="2" ry="2" />
<text text-anchor="" x="181.74" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.executeInstruction.\ (4 samples, 0.40%)</title><rect x="1010.6" y="149" width="4.8" height="15.0" fill="rgb(216,56,54)" rx="2" ry="2" />
<text text-anchor="" x="1013.64" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.throttle.sleepTime (2 samples, 0.20%)</title><rect x="1174.7" y="181" width="2.3" height="15.0" fill="rgb(235,215,36)" rx="2" ry="2" />
<text text-anchor="" x="1177.66" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints' (202 samples, 20.20%)</title><rect x="758.1" y="149" width="238.4" height="15.0" fill="rgb(252,26,46)" rx="2" ry="2" />
<text text-anchor="" x="761.12" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.Video.activePoints'</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.stepsPerFrame (4 samples, 0.40%)</title><rect x="213.0" y="181" width="4.7" height="15.0" fill="rgb(211,79,3)" rx="2" ry="2" />
<text text-anchor="" x="215.96" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.load (15 samples, 1.50%)</title><rect x="1036.6" y="117" width="17.7" height="15.0" fill="rgb(242,228,11)" rx="2" ry="2" />
<text text-anchor="" x="1039.60" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.new (2 samples, 0.20%)</title><rect x="181.1" y="197" width="2.4" height="15.0" fill="rgb(218,66,19)" rx="2" ry="2" />
<text text-anchor="" x="184.10" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Extra.execParserPure (2 samples, 0.20%)</title><rect x="1179.4" y="197" width="2.3" height="15.0" fill="rgb(216,202,36)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Common.runParser (2 samples, 0.20%)</title><rect x="1179.4" y="117" width="2.3" height="15.0" fill="rgb(213,101,43)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.StateVar.$= (2 samples, 0.20%)</title><rect x="299.1" y="181" width="2.4" height="15.0" fill="rgb(248,120,3)" rx="2" ry="2" />
<text text-anchor="" x="302.10" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SDL.Event.pollEvent (6 samples, 0.60%)</title><rect x="227.1" y="165" width="7.1" height="15.0" fill="rgb(214,164,42)" rx="2" ry="2" />
<text text-anchor="" x="230.12" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.delayMilis (57 samples, 5.70%)</title><rect x="1107.4" y="181" width="67.3" height="15.0" fill="rgb(210,157,11)" rx="2" ry="2" />
<text text-anchor="" x="1110.40" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulato..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.mainLoop (25 samples, 2.50%)</title><rect x="149.2" y="213" width="29.5" height="15.0" fill="rgb(230,186,36)" rx="2" ry="2" />
<text text-anchor="" x="152.24" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Em..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Primitive.Types.readByteArray# (8 samples, 0.80%)</title><rect x="748.7" y="101" width="9.4" height="15.0" fill="rgb(221,130,49)" rx="2" ry="2" />
<text text-anchor="" x="751.68" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (25 samples, 2.50%)</title><rect x="149.2" y="229" width="29.5" height="15.0" fill="rgb(237,53,40)" rx="2" ry="2" />
<text text-anchor="" x="152.24" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ma..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.stepsPerFrame (4 samples, 0.40%)</title><rect x="213.0" y="197" width="4.7" height="15.0" fill="rgb(232,54,30)" rx="2" ry="2" />
<text text-anchor="" x="215.96" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.readPC (6 samples, 0.60%)</title><rect x="1061.4" y="133" width="7.1" height="15.0" fill="rgb(240,131,44)" rx="2" ry="2" />
<text text-anchor="" x="1064.38" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.writePC (2 samples, 0.20%)</title><rect x="1008.3" y="101" width="2.3" height="15.0" fill="rgb(213,82,16)" rx="2" ry="2" />
<text text-anchor="" x="1011.28" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Mutable.URef.writeRef (2 samples, 0.20%)</title><rect x="1008.3" y="85" width="2.3" height="15.0" fill="rgb(218,204,29)" rx="2" ry="2" />
<text text-anchor="" x="1011.28" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.delayMilisIO (55 samples, 5.50%)</title><rect x="1109.8" y="165" width="64.9" height="15.0" fill="rgb(206,35,8)" rx="2" ry="2" />
<text text-anchor="" x="1112.76" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulato..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MAIN.MAIN (993 samples, 99.30%)</title><rect x="10.0" y="261" width="1171.7" height="15.0" fill="rgb(251,14,41)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >MAIN.MAIN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.draw (4 samples, 0.40%)</title><rect x="1010.6" y="133" width="4.8" height="15.0" fill="rgb(226,48,28)" rx="2" ry="2" />
<text text-anchor="" x="1013.64" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.throttle.delayInMs (2 samples, 0.20%)</title><rect x="1174.7" y="165" width="2.3" height="15.0" fill="rgb(228,112,0)" rx="2" ry="2" />
<text text-anchor="" x="1177.66" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.mainLoop (844 samples, 84.40%)</title><rect x="183.5" y="229" width="995.9" height="15.0" fill="rgb(239,66,0)" rx="2" ry="2" />
<text text-anchor="" x="186.46" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.mainLoop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SDL.Video.Renderer.rendererDrawColor (2 samples, 0.20%)</title><rect x="299.1" y="165" width="2.4" height="15.0" fill="rgb(249,151,34)" rx="2" ry="2" />
<text text-anchor="" x="302.10" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.load (21 samples, 2.10%)</title><rect x="1029.5" y="149" width="24.8" height="15.0" fill="rgb(239,196,42)" rx="2" ry="2" />
<text text-anchor="" x="1032.52" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >E..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.updateTimers (6 samples, 0.60%)</title><rect x="171.7" y="181" width="7.0" height="15.0" fill="rgb(238,21,42)" rx="2" ry="2" />
<text text-anchor="" x="174.66" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints'.(...) (2 samples, 0.20%)</title><rect x="879.7" y="133" width="2.3" height="15.0" fill="rgb(249,59,7)" rx="2" ry="2" />
<text text-anchor="" x="882.66" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.mainLoop.loop (844 samples, 84.40%)</title><rect x="183.5" y="213" width="995.9" height="15.0" fill="rgb(229,34,6)" rx="2" ry="2" />
<text text-anchor="" x="186.46" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.mainLoop.loop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Primitive.primitive (14 samples, 1.40%)</title><rect x="741.6" y="117" width="16.5" height="15.0" fill="rgb(227,70,14)" rx="2" ry="2" />
<text text-anchor="" x="744.60" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.render (646 samples, 64.60%)</title><rect x="234.2" y="197" width="762.3" height="15.0" fill="rgb(234,128,53)" rx="2" ry="2" />
<text text-anchor="" x="237.20" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.Monad.Internal.render</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.runIOEmulator (4 samples, 0.40%)</title><rect x="178.7" y="229" width="4.8" height="15.0" fill="rgb(252,71,38)" rx="2" ry="2" />
<text text-anchor="" x="181.74" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.mainLoop.frameSteps (77 samples, 7.70%)</title><rect x="996.5" y="197" width="90.8" height="15.0" fill="rgb(229,204,8)" rx="2" ry="2" />
<text text-anchor="" x="999.48" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Primitive.primitive (2 samples, 0.20%)</title><rect x="1177.0" y="149" width="2.4" height="15.0" fill="rgb(252,179,34)" rx="2" ry="2" />
<text text-anchor="" x="1180.02" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.currentMilis (8 samples, 0.80%)</title><rect x="217.7" y="197" width="9.4" height="15.0" fill="rgb(238,155,16)" rx="2" ry="2" />
<text text-anchor="" x="220.68" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Instruction.decodeInstruction (4 samples, 0.40%)</title><rect x="1024.8" y="149" width="4.7" height="15.0" fill="rgb(245,224,12)" rx="2" ry="2" />
<text text-anchor="" x="1027.80" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.readTimer (2 samples, 0.20%)</title><rect x="1177.0" y="181" width="2.4" height="15.0" fill="rgb(252,16,21)" rx="2" ry="2" />
<text text-anchor="" x="1180.02" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.writePC (6 samples, 0.60%)</title><rect x="1003.6" y="117" width="7.0" height="15.0" fill="rgb(239,207,19)" rx="2" ry="2" />
<text text-anchor="" x="1006.56" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.CAF:main_ds (25 samples, 2.50%)</title><rect x="149.2" y="245" width="29.5" height="15.0" fill="rgb(210,229,2)" rx="2" ry="2" />
<text text-anchor="" x="152.24" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ma..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.render.renderCell (276 samples, 27.60%)</title><rect x="301.5" y="181" width="325.6" height="15.0" fill="rgb(227,175,45)" rx="2" ry="2" />
<text text-anchor="" x="304.46" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.Monad.Internal.render.renderCell</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SDL.Time.time (8 samples, 0.80%)</title><rect x="217.7" y="181" width="9.4" height="15.0" fill="rgb(225,190,42)" rx="2" ry="2" />
<text text-anchor="" x="220.68" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints'.\ (32 samples, 3.20%)</title><rect x="882.0" y="133" width="37.8" height="15.0" fill="rgb(237,116,39)" rx="2" ry="2" />
<text text-anchor="" x="885.02" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.c_memory (2 samples, 0.20%)</title><rect x="1049.6" y="101" width="2.3" height="15.0" fill="rgb(245,205,12)" rx="2" ry="2" />
<text text-anchor="" x="1052.58" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.readPC (2 samples, 0.20%)</title><rect x="1066.1" y="117" width="2.4" height="15.0" fill="rgb(242,11,2)" rx="2" ry="2" />
<text text-anchor="" x="1069.10" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.withCPU (17 samples, 1.70%)</title><rect x="1034.2" y="133" width="20.1" height="15.0" fill="rgb(214,61,1)" rx="2" ry="2" />
<text text-anchor="" x="1037.24" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Extra.customExecParser (2 samples, 0.20%)</title><rect x="1179.4" y="213" width="2.3" height="15.0" fill="rgb(222,205,19)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.nextInstruction (61 samples, 6.10%)</title><rect x="1015.4" y="165" width="71.9" height="15.0" fill="rgb(251,29,49)" rx="2" ry="2" />
<text text-anchor="" x="1018.36" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Mutable.URef.writeRef (2 samples, 0.20%)</title><rect x="1085.0" y="85" width="2.3" height="15.0" fill="rgb(246,199,3)" rx="2" ry="2" />
<text text-anchor="" x="1087.98" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Common.runParserInfo (2 samples, 0.20%)</title><rect x="1179.4" y="149" width="2.3" height="15.0" fill="rgb(223,131,24)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints.\ (256 samples, 25.60%)</title><rect x="694.4" y="165" width="302.1" height="15.0" fill="rgb(240,54,2)" rx="2" ry="2" />
<text text-anchor="" x="697.40" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator.Video.activePoints.\</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SDL.Video.Renderer.rendererDrawColor.setRenderDrawColor (2 samples, 0.20%)</title><rect x="299.1" y="149" width="2.4" height="15.0" fill="rgb(216,223,5)" rx="2" ry="2" />
<text text-anchor="" x="302.10" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.draw.drawAligned (2 samples, 0.20%)</title><rect x="1013.0" y="37" width="2.4" height="15.0" fill="rgb(216,221,50)" rx="2" ry="2" />
<text text-anchor="" x="1016.00" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Vector.Unboxed.Base.basicUnsafeRead (24 samples, 2.40%)</title><rect x="729.8" y="149" width="28.3" height="15.0" fill="rgb(210,20,49)" rx="2" ry="2" />
<text text-anchor="" x="732.80" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.updateTimers (2 samples, 0.20%)</title><rect x="1177.0" y="197" width="2.4" height="15.0" fill="rgb(248,29,9)" rx="2" ry="2" />
<text text-anchor="" x="1180.02" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.Internal.handleInputs (6 samples, 0.60%)</title><rect x="227.1" y="197" width="7.1" height="15.0" fill="rgb(221,225,40)" rx="2" ry="2" />
<text text-anchor="" x="230.12" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(229,184,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.writePC (2 samples, 0.20%)</title><rect x="1085.0" y="101" width="2.3" height="15.0" fill="rgb(224,85,1)" rx="2" ry="2" />
<text text-anchor="" x="1087.98" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UNKNOWN (7 samples, 0.70%)</title><rect x="1181.7" y="261" width="8.3" height="15.0" fill="rgb(246,39,24)" rx="2" ry="2" />
<text text-anchor="" x="1184.74" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SDL.Event.pollEvents (6 samples, 0.60%)</title><rect x="227.1" y="181" width="7.1" height="15.0" fill="rgb(212,106,11)" rx="2" ry="2" />
<text text-anchor="" x="230.12" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.executeInstruction (12 samples, 1.20%)</title><rect x="1001.2" y="165" width="14.2" height="15.0" fill="rgb(213,226,35)" rx="2" ry="2" />
<text text-anchor="" x="1004.20" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.mainLoop.loop (25 samples, 2.50%)</title><rect x="149.2" y="197" width="29.5" height="15.0" fill="rgb(211,25,42)" rx="2" ry="2" />
<text text-anchor="" x="152.24" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Em..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.draw (2 samples, 0.20%)</title><rect x="1013.0" y="53" width="2.4" height="15.0" fill="rgb(218,141,19)" rx="2" ry="2" />
<text text-anchor="" x="1016.00" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Video.activePoints'.onBits (65 samples, 6.50%)</title><rect x="919.8" y="133" width="76.7" height="15.0" fill="rgb(237,35,7)" rx="2" ry="2" />
<text text-anchor="" x="922.78" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Emulator..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Internal.runP (2 samples, 0.20%)</title><rect x="1179.4" y="181" width="2.3" height="15.0" fill="rgb(222,188,1)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.CPU.newWithRom (4 samples, 0.40%)</title><rect x="178.7" y="213" width="4.8" height="15.0" fill="rgb(219,97,16)" rx="2" ry="2" />
<text text-anchor="" x="181.74" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.withCPU (12 samples, 1.20%)</title><rect x="1073.2" y="133" width="14.1" height="15.0" fill="rgb(236,76,11)" rx="2" ry="2" />
<text text-anchor="" x="1076.18" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Emulator.Monad.IO.writePC (6 samples, 0.60%)</title><rect x="1003.6" y="149" width="7.0" height="15.0" fill="rgb(221,166,25)" rx="2" ry="2" />
<text text-anchor="" x="1006.56" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Common.runParser.do_step (2 samples, 0.20%)</title><rect x="1179.4" y="101" width="2.3" height="15.0" fill="rgb(218,194,11)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Options.Applicative.Common.runParserFully (2 samples, 0.20%)</title><rect x="1179.4" y="133" width="2.3" height="15.0" fill="rgb(224,183,39)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
